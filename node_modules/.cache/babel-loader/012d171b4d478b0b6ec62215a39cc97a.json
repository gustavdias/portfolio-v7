{"ast":null,"code":"var _jsxFileName = \"/home/khan/code/gustavdias/deploy/portfolio/p7/portfolio-v7/src/components/NavMenu/NavDrawer.js\";\nimport React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { AssignmentInd, Home, ContactMail } from \"@material-ui/icons\";\nimport { Typography, Avatar } from \"@material-ui/core\";\nimport FooterMobile from \"../Footer/FooterMobile\";\nimport FileCopy from \"@material-ui/icons/FileCopy\";\nimport { Link } from \"react-router-dom\";\nimport avatar from '../../assets/images/android-chrome-512x512.png'; // import Button from \"@material-ui/core/Button\";\n\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles(theme => ({\n  avatar: {\n    // display: 'block',\n    margin: \"0.5rem auto\",\n    // margin: theme.spacing(1),\n    width: theme.spacing(13),\n    height: theme.spacing(13)\n  },\n  resumeButton: {\n    color: \"#19a9bc\"\n  },\n  copyButton: {\n    color: \"#eaded0\"\n  },\n  button: {\n    color: \"#dbb700\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(2)\n  },\n  listItem: {// background: \"#353236\",\n    // color: \"#19a9bc\",\n  },\n  list: {\n    background: \"#353236\",\n    color: \"#dbb700\",\n    width: 250,\n    height: \"100%\"\n  },\n  fullList: {\n    width: \"auto\"\n  }\n}));\nexport default function NavDrawer(props) {\n  //NavDrawer opens\n  // let drawerClasses = \"side-drawer\";\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false\n  });\n\n  const toggleDrawer = (anchor, open) => event => {\n    if (event && event.type === \"keydown\" && (event.key === \"Tab\" || event.key === \"Shift\")) {\n      return;\n    }\n\n    setState({ ...state,\n      [anchor]: open\n    });\n  };\n\n  const list = anchor => /*#__PURE__*/React.createElement(\"div\", {\n    className: clsx(classes.list, {\n      [classes.fullList]: anchor === \"top\" || anchor === \"bottom\"\n    }),\n    role: \"presentation\",\n    onClick: toggleDrawer(anchor, false),\n    onKeyDown: toggleDrawer(anchor, false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    src: avatar,\n    className: classes.avatar,\n    alt: \"Gustavo Dias\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: \"#eaded0\",\n      fontFamily: \"Montserrat\"\n    },\n    onClick: () => {\n      navigator.clipboard.writeText(props.email.email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }\n  }, \"gustav.almd@gmail.com\"), \" \"))), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, [\"COPY EMAIL\"].map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n    button: true,\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classes.copyButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, index % 2 === 0 ? /*#__PURE__*/React.createElement(FileCopy, {\n    onClick: () => {\n      navigator.clipboard.writeText(props.email.email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }) : /*#__PURE__*/React.createElement(ContactMail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.copyButton,\n    primary: text,\n    onClick: () => {\n      navigator.clipboard.writeText(props.email.email);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    className: classes.copyButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    color: \"inherit\",\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://drive.google.com/file/d/11kDg6kOCOLxBYZUq6uK-8E2zeV5BXe1d/view?usp=sharing\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(AssignmentInd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    display: \"flex\",\n    justifyContent: \"center\",\n    className: classes.copyButton,\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://drive.google.com/file/d/11kDg6kOCOLxBYZUq6uK-8E2zeV5BXe1d/view?usp=sharing\" // variant=\"outlined\"\n    ,\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  }, \"Resume\"))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }\n  })); // console.log(\"props in NavDrawer\" + props);\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 5\n    }\n  }, [\"right\"].map(anchor => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: anchor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"inherit\",\n    \"aria-label\": \"open drawer\",\n    onClick: toggleDrawer(anchor, true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(MenuIcon, {\n    style: {\n      fontSize: 40\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(SwipeableDrawer, {\n    anchor: anchor,\n    open: state[anchor],\n    onClose: toggleDrawer(anchor, false),\n    onOpen: toggleDrawer(anchor, true),\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 11\n    }\n  }, list(anchor), /*#__PURE__*/React.createElement(FooterMobile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["/home/khan/code/gustavdias/deploy/portfolio/p7/portfolio-v7/src/components/NavMenu/NavDrawer.js"],"names":["React","clsx","makeStyles","SwipeableDrawer","List","Divider","ListItem","ListItemIcon","ListItemText","MenuIcon","IconButton","AssignmentInd","Home","ContactMail","Typography","Avatar","FooterMobile","FileCopy","Link","avatar","Button","useStyles","theme","margin","width","spacing","height","resumeButton","color","copyButton","button","menuButton","marginRight","marginLeft","listItem","list","background","fullList","NavDrawer","props","classes","state","setState","useState","top","left","bottom","right","toggleDrawer","anchor","open","event","type","key","fontFamily","navigator","clipboard","writeText","email","map","text","index","fontSize"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,SACEC,aADF,EAEEC,IAFF,EAGEC,WAHF,QAIO,oBAJP;AAKA,SAAQC,UAAR,EAAoBC,MAApB,QAAiC,mBAAjC;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,QAAP,MAAqB,6BAArB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,gDAAnB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAIA,MAAMC,SAAS,GAAGnB,UAAU,CAAEoB,KAAD,KAAY;AACvCH,EAAAA,MAAM,EAAE;AACN;AACAI,IAAAA,MAAM,EAAE,aAFF;AAGN;AACAC,IAAAA,KAAK,EAAEF,KAAK,CAACG,OAAN,CAAc,EAAd,CAJD;AAKNC,IAAAA,MAAM,EAAEJ,KAAK,CAACG,OAAN,CAAc,EAAd;AALF,GAD+B;AAQvCE,EAAAA,YAAY,EAAC;AACXC,IAAAA,KAAK,EAAE;AADI,GAR0B;AAWvCC,EAAAA,UAAU,EAAE;AACVD,IAAAA,KAAK,EAAE;AADG,GAX2B;AAcvCE,EAAAA,MAAM,EAAE;AACNF,IAAAA,KAAK,EAAE;AADD,GAd+B;AAiBvCG,EAAAA,UAAU,EAAE;AACVC,IAAAA,WAAW,EAAEV,KAAK,CAACG,OAAN,CAAc,CAAd,CADH;AAEVQ,IAAAA,UAAU,EAAEX,KAAK,CAACG,OAAN,CAAc,CAAd;AAFF,GAjB2B;AAqBvCS,EAAAA,QAAQ,EAAE,CACR;AACA;AAFQ,GArB6B;AAyBvCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,UAAU,EAAE,SADR;AAEJR,IAAAA,KAAK,EAAE,SAFH;AAGJJ,IAAAA,KAAK,EAAE,GAHH;AAIJE,IAAAA,MAAM,EAAE;AAJJ,GAzBiC;AA+BvCW,EAAAA,QAAQ,EAAE;AACRb,IAAAA,KAAK,EAAE;AADC;AA/B6B,CAAZ,CAAD,CAA5B;AAoCA,eAAe,SAASc,SAAT,CAAmBC,KAAnB,EAA0B;AACvC;AACA;AAEA,QAAMC,OAAO,GAAGnB,SAAS,EAAzB;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoB1C,KAAK,CAAC2C,QAAN,CAAe;AACvCC,IAAAA,GAAG,EAAE,KADkC;AAEvCC,IAAAA,IAAI,EAAE,KAFiC;AAGvCC,IAAAA,MAAM,EAAE,KAH+B;AAIvCC,IAAAA,KAAK,EAAE;AAJgC,GAAf,CAA1B;;AAOA,QAAMC,YAAY,GAAG,CAACC,MAAD,EAASC,IAAT,KAAmBC,KAAD,IAAW;AAChD,QACEA,KAAK,IACLA,KAAK,CAACC,IAAN,KAAe,SADf,KAECD,KAAK,CAACE,GAAN,KAAc,KAAd,IAAuBF,KAAK,CAACE,GAAN,KAAc,OAFtC,CADF,EAIE;AACA;AACD;;AAEDX,IAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAY,OAACQ,MAAD,GAAUC;AAAtB,KAAD,CAAR;AACD,GAVD;;AAYA,QAAMf,IAAI,GAAIc,MAAD,iBACX;AACE,IAAA,SAAS,EAAEhD,IAAI,CAACuC,OAAO,CAACL,IAAT,EAAe;AAC5B,OAACK,OAAO,CAACH,QAAT,GAAoBY,MAAM,KAAK,KAAX,IAAoBA,MAAM,KAAK;AADvB,KAAf,CADjB;AAIE,IAAA,IAAI,EAAC,cAJP;AAKE,IAAA,OAAO,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CALvB;AAME,IAAA,SAAS,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CANzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBASJ,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,cAAc,EAAC,QAAtC;AAA+C,IAAA,GAAG,EAAE9B,MAApD;AAA4D,IAAA,SAAS,EAAEqB,OAAO,CAACrB,MAA/E;AAAuF,IAAA,GAAG,EAAC,cAA3F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATI,eAUE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE;AAAES,MAAAA,KAAK,EAAE,SAAT;AAAoB0B,MAAAA,UAAU,EAAE;AAAhC,KADT;AAEE,IAAA,OAAO,EAAE,MAAM;AACbC,MAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BlB,KAAK,CAACmB,KAAN,CAAYA,KAA1C;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADF,EAQgB,GARhB,CADF,CADF,CAVF,eA0BE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,YAAD,EAAeC,GAAf,CAAmB,CAACC,IAAD,EAAOC,KAAP,kBAClB,oBAAC,QAAD;AAAU,IAAA,MAAM,MAAhB;AAAiB,IAAA,GAAG,EAAED,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAEpB,OAAO,CAACX,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGgC,KAAK,GAAG,CAAR,KAAc,CAAd,gBACC,oBAAC,QAAD;AACE,IAAA,OAAO,EAAE,MAAM;AACbN,MAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BlB,KAAK,CAACmB,KAAN,CAAYA,KAA1C;AACD,KAHH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAOC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF,eAYE,oBAAC,YAAD;AACC,IAAA,SAAS,EAAElB,OAAO,CAACX,UADpB;AAEE,IAAA,OAAO,EAAE+B,IAFX;AAGE,IAAA,OAAO,EAAE,MAAM;AACbL,MAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BlB,KAAK,CAACmB,KAAN,CAAYA,KAA1C;AACD,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,CADD,CADH,CA1BF,eAkDE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlDF,eAyDE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAzDF,eA2DE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUN,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAElB,OAAO,CAACX,UAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,UAAD;AACgB,IAAA,KAAK,EAAC,SADtB;AAEgB,IAAA,MAAM,EAAC,QAFvB;AAGgB,IAAA,GAAG,EAAC,qBAHpB;AAIgB,IAAA,IAAI,EAAC,oFAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMgB,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANhB,CADA,eAgBY,oBAAC,MAAD;AACA,IAAA,OAAO,EAAC,MADR;AACe,IAAA,cAAc,EAAC,QAD9B;AAEE,IAAA,SAAS,EAAEW,OAAO,CAACX,UAFrB;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,GAAG,EAAC,qBAJN;AAKE,IAAA,IAAI,EAAC,oFALP,CAME;AANF;AAOE,IAAA,KAAK,EAAC,SAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBZ,CAVM,CA3DF,eAiIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjIF,CADF,CAxBuC,CA6JvC;;;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,OAAD,EAAU8B,GAAV,CAAeV,MAAD,iBACb,oBAAC,KAAD,CAAO,QAAP;AAAgB,IAAA,GAAG,EAAEA,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAET,OAAO,CAACT,UAFrB;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,kBAAW,aAJb;AAKE,IAAA,OAAO,EAAEiB,YAAY,CAACC,MAAD,EAAS,IAAT,CALvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAE;AAAEa,MAAAA,QAAQ,EAAE;AAAZ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,eAWE,oBAAC,eAAD;AACE,IAAA,MAAM,EAAEb,MADV;AAEE,IAAA,IAAI,EAAER,KAAK,CAACQ,MAAD,CAFb;AAGE,IAAA,OAAO,EAAED,YAAY,CAACC,MAAD,EAAS,KAAT,CAHvB;AAIE,IAAA,MAAM,EAAED,YAAY,CAACC,MAAD,EAAS,IAAT,CAJtB;AAKE,IAAA,KAAK,EAAC,SALR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOGd,IAAI,CAACc,MAAD,CAPP,eAQE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAXF,CADD,CADH,CADF;AA4BD","sourcesContent":["import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport List from \"@material-ui/core/List\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport {\n  AssignmentInd,\n  Home,\n  ContactMail,\n} from \"@material-ui/icons\";\nimport {Typography, Avatar} from \"@material-ui/core\";\nimport FooterMobile from \"../Footer/FooterMobile\";\nimport FileCopy from \"@material-ui/icons/FileCopy\";\nimport { Link } from \"react-router-dom\";\nimport avatar from '../../assets/images/android-chrome-512x512.png'\n// import Button from \"@material-ui/core/Button\";\nimport Button from \"@material-ui/core/Button\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  avatar: {\n    // display: 'block',\n    margin: \"0.5rem auto\",\n    // margin: theme.spacing(1),\n    width: theme.spacing(13),\n    height: theme.spacing(13),\n  },\n  resumeButton:{\n    color: \"#19a9bc\",\n  },\n  copyButton: {\n    color: \"#eaded0\",\n  },\n  button: {\n    color: \"#dbb700\",\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n    marginLeft: theme.spacing(2),\n  },\n  listItem: {\n    // background: \"#353236\",\n    // color: \"#19a9bc\",\n  },\n  list: {\n    background: \"#353236\",\n    color: \"#dbb700\",\n    width: 250,\n    height: \"100%\",\n  },\n  fullList: {\n    width: \"auto\",\n  },\n}));\n\nexport default function NavDrawer(props) {\n  //NavDrawer opens\n  // let drawerClasses = \"side-drawer\";\n\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    top: false,\n    left: false,\n    bottom: false,\n    right: false,\n  });\n\n  const toggleDrawer = (anchor, open) => (event) => {\n    if (\n      event &&\n      event.type === \"keydown\" &&\n      (event.key === \"Tab\" || event.key === \"Shift\")\n    ) {\n      return;\n    }\n\n    setState({ ...state, [anchor]: open });\n  };\n\n  const list = (anchor) => (\n    <div\n      className={clsx(classes.list, {\n        [classes.fullList]: anchor === \"top\" || anchor === \"bottom\",\n      })}\n      role=\"presentation\"\n      onClick={toggleDrawer(anchor, false)}\n      onKeyDown={toggleDrawer(anchor, false)}\n    >\n\n<Avatar display=\"flex\" justifyContent=\"center\" src={avatar} className={classes.avatar} alt=\"Gustavo Dias\" />\n      <List>\n        <ListItem>\n          <ListItemIcon>\n            <Typography\n              style={{ color: \"#eaded0\", fontFamily: \"Montserrat\" }}\n              onClick={() => {\n                navigator.clipboard.writeText(props.email.email);\n              }}\n            >\n              gustav.almd@gmail.com\n            </Typography>{\" \"}\n          </ListItemIcon>\n        </ListItem>\n      </List>\n\n\n      <List>\n        {[\"COPY EMAIL\"].map((text, index) => (\n          <ListItem button key={text}>\n            <ListItemIcon className={classes.copyButton}>\n              {index % 2 === 0 ? (\n                <FileCopy\n                  onClick={() => {\n                    navigator.clipboard.writeText(props.email.email);\n                  }}\n                />\n              ) : (\n                <ContactMail />\n              )}\n            </ListItemIcon>\n            <ListItemText\n             className={classes.copyButton}\n              primary={text}\n              onClick={() => {\n                navigator.clipboard.writeText(props.email.email);\n              }}\n            />\n          </ListItem>\n        ))}\n      </List>\n      <Divider/>\n\n     \n\n\n\n\n      <Divider />\n\n      <List>\n        {/* {[\"Resume\"].map((text, index) => (\n          <ListItem\n            button\n            key={text}\n            component={Link}\n            to=\"https://drive.google.com/file/d/11kDg6kOCOLxBYZUq6uK-8E2zeV5BXe1d/view?usp=sharing\"\n            variant=\"contained\"\n            color=\"primary\"\n          > */}\n<ListItem className={classes.copyButton}>\n<IconButton\n                color=\"inherit\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                href=\"https://drive.google.com/file/d/11kDg6kOCOLxBYZUq6uK-8E2zeV5BXe1d/view?usp=sharing\"\n              >\n                <AssignmentInd />\n              </IconButton>\n\n\n            {/* <ListItemIcon className={classes.button}>\n            </ListItemIcon> */}\n\n            {/* <ListItemText> */}\n\n            <Button\n            display=\"flex\" justifyContent=\"center\"\n              className={classes.copyButton}\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n              href=\"https://drive.google.com/file/d/11kDg6kOCOLxBYZUq6uK-8E2zeV5BXe1d/view?usp=sharing\"\n              // variant=\"outlined\"\n              color=\"inherit\"\n            >\n              Resume\n            </Button>\n            {/* <Typography style={{ color: \"#19a9bc\", fontFamily: \"Montserrat\" }}>\nResume\n            </Typography> */}\n\n\n            {/* </ListItemText> */}\n\n          {/* </ListItem> */}\n        {/* ))} */}\n        </ListItem>\n      </List>\n\n\n      {/* <List>\n        {[\"Resume\"].map((text, index) => (\n          <ListItem\n            button\n            key={text}\n            component={Link}\n            to=\"https://drive.google.com/file/d/11kDg6kOCOLxBYZUq6uK-8E2zeV5BXe1d/view?usp=sharing\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            <ListItemIcon className={classes.button}>\n              {index % 2 === 0 ? <AssignmentInd /> : <ContactMail />}\n            </ListItemIcon>\n            <ListItemText primary={text} />\n            <ListItemPath />\n          </ListItem>\n        ))}\n      </List> */}\n\n  \n      <Divider />\n    </div>\n  );\n  // console.log(\"props in NavDrawer\" + props);\n  return (\n    <div>\n      {[\"right\"].map((anchor) => (\n        <React.Fragment key={anchor}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={toggleDrawer(anchor, true)}\n          >\n            <MenuIcon style={{ fontSize: 40 }}/>\n          </IconButton>\n          {/* <Button onClick={toggleDrawer(anchor, true)}>{anchor}</Button> */}\n          <SwipeableDrawer\n            anchor={anchor}\n            open={state[anchor]}\n            onClose={toggleDrawer(anchor, false)}\n            onOpen={toggleDrawer(anchor, true)}\n            color=\"inherit\"\n          >\n            {list(anchor)}\n            <FooterMobile />\n          </SwipeableDrawer>\n        </React.Fragment>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}